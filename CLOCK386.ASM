INCLUDE	B:\DVAPI.INC

.MODEL	TINY
.CODE
	ORG	100H
.386
                                    
CLOCK	PROC	NEAR
	@CALL	DVPRESENT		;SEE IF DESQVIEW ACTIVE
	TEST	AX,AX
	JZ	DV_NOT_PRES		;IF NOT, JUMP TO ERROR CODE
	CALL	INIT
	CALL	SETUP
	CALL	GET_INFO
TIME:	CALL	CHECK_TIME
	CALL	CHECK_KEY
	CALL	CHECK_MAIL
	JMP	TIME
DV_NOT_PRES:
	MOV	AH,9
	MOV	DX,OFFSET ERR_MESS
	INT	21H			;PRINT ERROR IF NO DESQVIEW
	INT	20H			; AND EXIT
CLOCK	ENDP

INIT	PROC	NEAR
	@SEND	HANDLE,ME
	POP	DWORD PTR MYHANDLE
	MOV	SI,OFFSET STARTSTR
	@PUSH	DSSI
	PUSH	DWORD PTR 7
	@SEND	WRITE,MYHANDLE
	@SEND	HANDLE,KEYME
	POP	DWORD PTR MYKEYBOARD
	PUSH	DWORD PTR 2
	@SEND	SUBFROM,MYKEYBOARD
	@SEND	HANDLE,MAILME
	POP	DWORD PTR MYMAIL
	MOV	SI,OFFSET MAIL_STR
	@PUSH	DSSI
	PUSH	DWORD PTR 5
	@SEND 	WRITE,MYHANDLE
	RET
INIT	ENDP

CHECK_MAIL	PROC	NEAR
	@SEND	SIZEOF,MYMAIL
	POP	EAX
	CMP	EAX,0
	JZ	E_MAIL
	@SEND	READ,MYMAIL
	POP	ECX
	@POP	ESSI
	CMP	ABOUT_FLAG,1
	JE	E_MAIL
	MOV	ABOUT_FLAG,1
	CALL	SETUP
E_MAIL:	RET
CHECK_MAIL	ENDP

SETUP	PROC	NEAR
	MOV	SI,OFFSET ABOUT_TITLE
	@PUSH	DSSI			;WINDOW TITLE
	PUSH	DWORD PTR 8		;LENGTH OF TITLE
	PUSH	DWORD PTR 6		;# OF ROWS
	PUSH	DWORD PTR 27		;# OF COLUMNS
	PUSH	DWORD PTR 0		;NO INPUT BUFFER
	PUSH	DWORD PTR -1		;DEFAULT STACK
	PUSH	DWORD PTR -1		;TASK
	MOV	SI,OFFSET ABOUT
	PUSH	CS
	PUSH	SI
	@SEND	NEW,WINDOW
	POP	DWORD PTR A_WIN
	MOV	SI,OFFSET TASK_STR
	@PUSH	DSSI
	PUSH	DWORD PTR 10
	@CALL	PAUSE
	@SEND	WRITE,A_WIN
	RET
ABOUT:	PUSH	CS
	POP	DS
	@SEND	HANDLE,ME
	POP	DWORD PTR A_WIN
	MOV	SI,OFFSET A_WIN_STR
	@PUSH	DSSI
	PUSH	DWORD PTR 9
	@SEND	WRITE,A_WIN
	PUSH	DWORD PTR 0
	PUSH	DWORD PTR 7
	@SEND	AT,A_WIN
	MOV	SI,OFFSET A_1
	@PUSH	DSSI
	PUSH	DWORD PTR 13
	@SEND	WRITE,A_WIN
	PUSH	DWORD PTR 1
	PUSH	DWORD PTR 0
	@SEND	AT,A_WIN
	MOV	SI,OFFSET A_2
	@PUSH	DSSI
	PUSH	DWORD PTR 27
	@SEND	WRITE,A_WIN
	PUSH	DWORD PTR 3
	PUSH	DWORD PTR 6
	@SEND	AT,A_WIN
	MOV	SI,OFFSET A_3
	@PUSH	DSSI
	PUSH	DWORD PTR 14
	@SEND	WRITE,A_WIN
	PUSH	DWORD PTR 5
	PUSH	DWORD PTR 0
	@SEND	AT,A_WIN
	MOV	SI,OFFSET A_4
	@PUSH	DSSI
	PUSH	DWORD PTR 27
	@SEND	WRITE,A_WIN
	@SEND	NEW,TIMER
	POP	DWORD PTR TIMER_HAN
	PUSH	DWORD PTR 700
	@SEND	ADDTO,TIMER_HAN
	@SEND	READ,TIMER_HAN
	POP	EAX
	@SEND	FREE,TIMER_HAN
	@CALL	ENTERC
	MOV	ABOUT_FLAG,0
	@SEND	FREE,A_WIN
SETUP	ENDP

CHECK_TIME	PROC	NEAR
	MOV	AH,2CH
	INT	21H
	CMP	DH,OLD_T
	JE	NO_CHANE
	MOV	DL,SEC
	MOV	OLD_T,DL
	MOV	HOUR,CH
	MOV	MIN,CL
	MOV	SEC,DH
	CALL	CHECK_DATE
	CALL	PRINT_TIME
	RET
NO_CHANE:
	@CALL	PAUSE
	RET
CHECK_TIME	ENDP

PRINT_TIME	PROC	NEAR
	MOV	AH,2
	XOR	BH,BH
	MOV	DX,100H			;SET CURSOR, TO PREVENT WEIRD
	INT	10H			; PRINTOUTS OF TIME WHEN KEY PRESSED
	CMP	STYLE,1
	JZ	STANDARD
	CALL	MIHOUR
	JMP	THEND
STANDARD:
	CALL	STAN
THEND:	CALL	MINP
	CALL	SECP
	CMP	STYLE,1
	JNZ	NO_WAY
	CALL	AORP
NO_WAY:	RET	
PRINT_TIME	ENDP

MIHOUR	PROC	NEAR
	XOR	DH,DH
	MOV	DL,HOUR
	CMP	DL,9
	JG	H2
	MOV	AL,'0'
	INT	29H
H2:	CALL	WRITE_DECIMAL
	RET
MIHOUR	ENDP

STAN	PROC	NEAR
	MOV	DL,HOUR
	CMP	DL,0
	JNE	CONTIN
	MOV	FLAG,0
	ADD	DL,12
	JMP	OKA	
CONTIN:	CMP	DL,12
	JL	EFLAG
	JE	OFLAG
	SUB	DL,12
	MOV	FLAG,1
	JMP	OKA
EFLAG:	MOV	FLAG,0
	JMP	OKA
OFLAG:	MOV	FLAG,1
OKA:	XOR	DH,DH
	CMP	DL,9
	JG	SH2
	MOV	AL,' '
	INT	29H
SH2:	CALL	WRITE_DECIMAL
	RET
STAN	ENDP

MINP	PROC	NEAR
	MOV	AL,SEPERATE
	INT	29H
	MOV	DL,MIN
	CMP	DL,9
	JG	MN2
	MOV	AL,'0'
	INT	29H
MN2:	CALL	WRITE_DECIMAL
	RET
MINP	ENDP

SECP	PROC	NEAR
	MOV	AL,SEP2
	INT	29H
	MOV	DL,SEC
	CMP	DL,9
	JG	S2
	MOV	AL,'0'
	INT	29H
S2:	CALL	WRITE_DECIMAL
	RET
SECP	ENDP

CHECK_DATE	PROC	NEAR
	MOV	AH,2AH
	INT	21H
	CMP	BP,DX
	JE	NO_CHANGE
	CALL	PRINT_DATE
NO_CHANGE:	
	RET
CHECK_DATE	ENDP

API_WIN_DO	PROC	NEAR
	MOV	WINSTR+5,CL
	MOV	WINSTR+7,CL
	MOV	SI,OFFSET WINSTR
	@PUSH	DSSI
	PUSH	DWORD PTR 10
	@SEND	WRITE,MYHANDLE
	RET
API_WIN_DO	ENDP

SIZE_WINDOW	PROC	NEAR
	CBW
	MOV	DI,AX
	MOV	CL,LD[DI]
	DEC	DH
	MOV	AL,DH
	MOV	DI,AX
	ADD	CL,LM[DI]
	ADD	CL,6
	CMP	DAY,10
	JB	YESSAY
	INC	CL
YESSAY:	CALL	API_WIN_DO
	RET
SIZE_WINDOW	ENDP

PRINT_DATE	PROC	NEAR
	MOV	BP,DX
	MOV	DAY_WEEK,AL
	MOV	YEAR,CX
	MOV	MONTH,DH
	MOV	DAY,DL
	CALL	SIZE_WINDOW
	MOV	AL,DAY_WEEK
	CBW
	MOV	DI,AX
	SHL	DI,1
	MOV	DX,DCHOICE[DI]
	MOV	AH,9
	INT	21H
	MOV	AL,MONTH
	DEC	AL
	CBW
	MOV	DI,AX
	SHL	DI,1
	MOV	DX,MCHOICE[DI]
	MOV	AH,9
	INT	21H
	XOR	DH,DH
	MOV	DL,DAY
	CALL	WRITE_DECIMAL
	MOV	AL,' '
	INT	29H
	MOV	DX,YEAR
	CALL	WRITE_DECIMAL
	RET
PRINT_DATE	ENDP

WRITE_DECIMAL	PROC	NEAR
	MOV	AX,DX
	MOV	SI,10
	XOR	CX,CX
NON_ZERO:
	XOR	DX,DX
	DIV	SI
	PUSH	DX
	INC	CX
	OR	AX,AX
	JNE	NON_ZERO
WRITE_DIGIT_LOOP:
	POP	AX
	ADD	AL,'0'
	INT	29H
	LOOP	WRITE_DIGIT_LOOP
END_DECIMAL:
	RET
WRITE_DECIMAL	ENDP

GET_INFO	PROC	NEAR
	MOV	AH,30H			;PREPARE FOR DOS GET VERSION
	INT	21H			;CALL
	CMP	AL,3			;CHECK FOR VERSION 3
	JL	OE			;JUMP IF LOWER
	MOV	DX,OFFSET BUFFER	;SET UP BUFFER FOR DOS
	MOV	AX,3800H		;PREPARE FOR INTERNATIONAL INFO CALL
	INT	21H			;CALL DOS FOR INFO
	CMP	BX,1			;CHECK FOR USA
	JE	OE			;RETURN IF USA
	MOV	BX,DX			;SET UP POINTER
	MOV	AL,[BX+0DH]		;GET SEPERATOR VARIABLE
	MOV	SEPERATE,AL		;STORE HOUR/MIN SEPERATOR
	MOV	SEP2,AL			;STORE MIN/SEC SEPERATOR
	MOV	AL,[BX+11H]		;GET MILITARY FLAG
	CMP	AL,0			;CONVERT FOR CLOCK USAGE
	JE	OE
	MOV	STYLE,0			;SET MILITARY FLAG IF NEEDED
OE:	RET
GET_INFO	ENDP

AORP	PROC	NEAR
	MOV	AL,' '
	INT	29H
	CMP	FLAG,0
	JG	ABOV
	MOV	AL,'a'
	INT	29H
	JMP	QUI
ABOV:	MOV	AL,'p'
	INT	29H
QUI:	MOV	AL,'m'
	INT	29H
	RET
AORP	ENDP

GO_PAN	PROC	NEAR
	PUSH	DWORD PTR 0
	PUSH	DWORD PTR 0
	PUSH	DWORD PTR 8
	PUSH	DWORD PTR 23
	PUSH	DWORD PTR -1
	PUSH	DWORD PTR -1
	PUSH	DWORD PTR -1
	MOV	SI,OFFSET GO_PAN_NOW
	PUSH	CS
	PUSH	SI
	@SEND	NEW,WINDOW
	POP	DWORD PTR CPANEL
	MOV	SI,OFFSET TASK_STR_PAN
	@PUSH	DSSI
	PUSH	DWORD PTR 8
	@CALL	PAUSE
	@SEND	WRITE,CPANEL
	RET
GO_PAN_NOW:
	PUSH	CS
	POP	DS
	@SEND	HANDLE,ME
	POP	DWORD PTR CPANEL
	MOV	SI,OFFSET PAN_WIN_STR
	@PUSH	DSSI
	PUSH	DWORD PTR 10
	@SEND	WRITE,CPANEL
	PUSH	DWORD PTR 219
	@SEND	OPEN,CPANEL
	MOV	AX,600H
	MOV	BH,7
	MOV	CX,101H
	MOV	DX,615H
	INT	10H
	MOV	AX,1302H
	XOR	BH,BH
	MOV	DX,202H
	PUSH	DS
	POP	ES
	MOV	CX,14
	MOV	BP,OFFSET A
	INT	10H
	INC	DH
	MOV	BP,OFFSET M
	INT	10H
	INC	DH
	MOV	BP,OFFSET S
	INT	10H
	INC	DH
	MOV	CL,19
	MOV	BP,OFFSET C
	INT	10H
	@SEND	NEW,POINTER
	POP	DWORD PTR POINT
	PUSH	DWORD PTR 41H
	@SEND	ADDTO,POINT
NEXT_MOUSE:
	@SEND	READ,POINT
	POP	ECX
	@POP	ESSI
	MOV	AL,ES:[SI+4]
	CMP	AL,0
	JZ	NEXT_MOUSE
	CMP	AL,2
	JE	CRAZY
	MOV	BX,ES:[SI+2]
	CMP	BX,2
	JB	NEXT_MOUSE
	CMP	BX,4
	JA	NEXT_MOUSE
	MOV	AX,ES:[SI]
POINT_MESS:
	CMP	AX,2
	JB	NEXT_MOUSE
	CMP	AX,5
	JA	NEXT_MOUSE
	SUB	AX,2
CRGM:	MOV	SI,OFFSET MESS_BASE
	ADD	SI,AX
	@PUSH	DSSI
	PUSH	DWORD PTR 1
	PUSH	DWORD PTR 0
	@SEND	WRITE,MYKEYBOARD
	JMP	NEXT_MOUSE
CRAZY:	MOV	AX,3
	JMP	CRGM
GO_PAN	ENDP

CHECK_KEY	PROC	NEAR
	MOV	AH,6
	MOV	DL,255
	INT	21H
	JZ	QU
	OR	AL,32			;CONVERT CHAR TO LOWER CASE
	CMP	AL,'c'
	JNE	TRY_STAND
	CMP	PAN_FLAG,0
	JZ	START_PAN
	MOV	PAN_FLAG,0
	@SEND	FREE,CPANEL
	RET
START_PAN:
	MOV	PAN_FLAG,1
	CALL	GO_PAN
	RET
TRY_STAND:
	CMP	AL,'s'
	JE	YES
	CMP	AL,'m'
	JE	NO
	CMP	AL,'a'
	JNE	QU
	CMP	ABOUT_FLAG,1
	JE	QU
	MOV	ABOUT_FLAG,1
	CALL	SETUP
	RET
YES:	MOV	STYLE,1
	CALL	PRINT_TIME		;DISP STAN TIME OVER M TIME
	RET
NO:	MOV	STYLE,0
	CALL	PRINT_TIME		;DISP M TIME OVER STAN TIME
	MOV	AH,0AH			;SETUP TO ERASE AORP
	MOV	AL,' '			;USE SPACE
	XOR	BH,BH			;PAGE 0
	MOV	CX,3			;3 CHARACTERS
	INT	10H			;CALL
QU:	RET
CHECK_KEY	ENDP

.DATA
	BUFFER	DB	32 DUP (0)
	MYKEYBOARD	DD	0
	MYHANDLE	DD	0
	TIMER_HAN	DD	0
	A_WIN		DD	0
	MYMAIL		DD	0
	CPANEL		DD	0
	POINT		DD	0
	MCHOICE	DW	OFFSET M1
		DW	OFFSET M2
		DW	OFFSET M3
		DW	OFFSET M4
		DW	OFFSET M5
		DW	OFFSET M6
		DW	OFFSET M7
		DW	OFFSET M8
		DW	OFFSET M9
		DW	OFFSET M10
		DW	OFFSET M11
		DW	OFFSET M12
	DCHOICE	DW	OFFSET D1
		DW	OFFSET D2
		DW	OFFSET D3
		DW	OFFSET D4
		DW	OFFSET D5
		DW	OFFSET D6
		DW	OFFSET D7
	YEAR	DW	0
	OLD_T	DB	0
	SEPERATE	DB	':'
	SEP2	DB	' '
	STYLE	DB	1
	FLAG	DB	0
	HOUR	DB	0
	MIN	DB	0
	SEC	DB	0
	DAY_WEEK	DB	0
	MONTH	DB	0
	DAY	DB	0
	PAN_FLAG	DB	0
	ABOUT_FLAG	DB	0
STARTSTR	DB	01BH,10H,3,0,22H,23H,24H
WINSTR	DB	01BH,00H,6,0,0A7H,00,0ABH,0,0E3H,0E4H
A_WIN_STR	DB	01BH,0,5,0,0A4H,9,0A5H,26,0E4H
TASK_STR	DB	01BH,010H,6,0,20H,21H,22H,23H,24H,25H
MAIL_STR	DB	1BH,10H,1,0,48H
PAN_WIN_STR	DB	1BH,0,6,0,0A4H,0,0A5H,57,0D7H,0E4H
TASK_STR_PAN	DB	1BH,10H,4,0,22H,23H,24H,25H
LD	DB	7,7,8,10,9,7,9
LM	DB	8,9,6,6,4,5,5,7,10,8,9,9	
ABOUT_TITLE	DB	"About..."
A_1	DB	"Clock386 4.10"
A_2	DB	"A simple clock for DESQview"
A_3	DB	"11-26-1993 BCK"
A_4	DB	"Press 'c' for control panel"
D1	DB	'Sunday $'
D2	DB	'Monday $'
D3	DB	'Tuesday $'
D4	DB	'Wednesday $'
D5	DB	'Thursday $'
D6	DB	'Friday $'
D7	DB	'Saturday $'
M1	DB	'January $'
M2	DB	'February $'
M3	DB	'March $'
M4	DB	'April $'
M5	DB	'May $'
M6	DB	'June $'
M7	DB	'July $'
M8	DB	'August $'
M9	DB	'September $'
M10	DB	'October $'
M11	DB	'November $'
M12	DB	'December $'
A	DB	20H,70H,'A',70H,20H,70H,20H,7,'-',7,20H,7,'A',7,'b',7,'o',7
	DB	'u',7,'t',7,'.',7,'.',7,'.',7
M	DB	20H,70H,'M',70H,20H,70H,20H,7,'-',7,20H,7,'M',7,'i',7,'l',7
	DB	'i',7,'t',7,'a',7,'r',7,'y',7
S	DB	20H,70H,'S',70H,20H,70H,20H,7,'-',7,20H,7,'S',7,'t',7,'a',7
	DB	'n',7,'d',7,'a',7,'r',7,'d',7
C	DB	20H,70H,'C',70H,20H,70H,20H,7,'-',7,20H,7,'C',7,'o',7,'n',7
	DB	't',7,'r',7,'o',7,'l',7,20H,7,'P',7,'a',7,'n',7,'e',7,'l',7
MESS_BASE	DB	"AMSC"
ERR_MESS	DB	'DESQview required to run clock.',7,'$'
			
	END	CLOCK		
	